{"version":3,"sources":["components/todoReducer.js","components/TodoListItem.js","components/TodoList.js","components/TodoAdd.js","hooks/useForm.js","components/TodoApp.js","index.js"],"names":["todoReducer","state","action","type","payload","filter","todo","id","map","done","TodoListItem","index","handleDelete","handleToggle","className","onClick","desc","TodoList","todos","i","TodoAdd","handleAddTodo","initialState","useState","values","setValues","target","name","value","useForm","description","handleInputChange","reset","onSubmit","e","preventDefault","trim","length","newTodo","Date","getTime","placeholder","autoComplete","onChange","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","useEffect","setItem","stringify","todoId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fa83d181.chunk.js","sourcesContent":["export const todoReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'add':\r\n      return [...state, action.payload];\r\n\r\n    case 'delete':\r\n      return state.filter((todo) => todo.id !== action.payload);\r\n\r\n    case 'toggle':\r\n      return state.map((todo) =>\r\n        todo.id === action.payload ? { ...todo, done: !todo.done } : todo\r\n      );\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\r\n\r\nexport const TodoListItem = ({ todo, index, handleDelete, handleToggle }) => {\r\n  return (\r\n    <li key={todo.id} className='container-list__item'>\r\n      <p\r\n        className={`${todo.done && 'complete'}`}\r\n        onClick={() => {\r\n          handleToggle(todo.id);\r\n        }}\r\n      >\r\n        {index + 1}. {todo.desc}\r\n      </p>\r\n      <button\r\n        onClick={() => handleDelete(todo.id)}\r\n        className='container-list__button'\r\n      >\r\n        Borrar\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { TodoListItem } from './TodoListItem';\r\n\r\nexport const TodoList = ({ todos, handleToggle, handleDelete }) => {\r\n  return (\r\n    <ul className='container-list'>\r\n      {todos.map((todo, i) => (\r\n        <TodoListItem\r\n          key={todo.id}\r\n          todo={todo}\r\n          index={i}\r\n          handleDelete={handleDelete}\r\n          handleToggle={handleToggle}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useForm } from '../hooks/useForm';\r\n\r\nexport const TodoAdd = ({ handleAddTodo }) => {\r\n  const [{ description }, handleInputChange, reset] = useForm({\r\n    description: '',\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (description.trim().length < 2) {\r\n      return;\r\n    }\r\n\r\n    const newTodo = {\r\n      id: new Date().getTime(),\r\n      desc: description,\r\n      done: false,\r\n    };\r\n\r\n    handleAddTodo(newTodo);\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <div className='container-todo'>\r\n      <h4 className='container-todo__title'>Agregar items: </h4>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type='text'\r\n          name='description'\r\n          placeholder='Aprender ...'\r\n          autoComplete='off'\r\n          className='container-todo__input'\r\n          value={description}\r\n          onChange={handleInputChange}\r\n        />\r\n        <button type='submit' className='container-todo__button'>\r\n          Agregar\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const reset = () => {\r\n    setValues(initialState);\r\n  };\r\n\r\n  const handleInputchange = ({ target }) => {\r\n    setValues({\r\n      ...values,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  return [values, handleInputchange, reset];\r\n};\r\n","import React, { useEffect, useReducer } from 'react';\r\nimport { todoReducer } from './todoReducer';\r\n\r\nimport './style.css';\r\nimport { TodoList } from './TodoList';\r\nimport { TodoAdd } from './TodoAdd';\r\nconst init = () => {\r\n  // return [\r\n  //   {\r\n  //     id: new Date().getTime(),\r\n  //     desc: 'Aprender React',\r\n  //     done: false,\r\n  //   },\r\n  // ];\r\n  return JSON.parse(localStorage.getItem('todos')) || [];\r\n};\r\n\r\nexport const TodoApp = () => {\r\n  const [todos, dispatch] = useReducer(todoReducer, [], init);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('todos', JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  const handleDelete = (todoId) => {\r\n    const action = {\r\n      type: 'delete',\r\n      payload: todoId,\r\n    };\r\n    dispatch(action);\r\n  };\r\n\r\n  const handleToggle = (todoId) => {\r\n    dispatch({\r\n      type: 'toggle',\r\n      payload: todoId,\r\n    });\r\n  };\r\n\r\n  const handleAddTodo = (newTodo) => {\r\n    dispatch({\r\n      type: 'add',\r\n      payload: newTodo,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className='title'>TodoApp: Items agregados: {todos.length}</h1>\r\n      <div className=''>\r\n        <TodoAdd handleAddTodo={handleAddTodo} />\r\n      </div>\r\n\r\n      <div className='container-todo'>\r\n        <div className=''>\r\n          <TodoList\r\n            todos={todos}\r\n            handleDelete={handleDelete}\r\n            handleToggle={handleToggle}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { TodoApp } from './components/TodoApp';\n\nReactDOM.render(<TodoApp />, document.getElementById('root'));\n"],"sourceRoot":""}